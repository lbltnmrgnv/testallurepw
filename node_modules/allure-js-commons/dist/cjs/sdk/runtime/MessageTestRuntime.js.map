{"version":3,"file":"MessageTestRuntime.js","names":["_model","require","_utils","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","asyncGeneratorStep","n","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","_next","_throw","_toPropertyKey","configurable","writable","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","MessageTestRuntime","constructor","addFailedTests","tests","label","name","_this","sendMessage","type","data","labels","_arguments","_this2","_len","Array","_key","link","url","_this3","links","_arguments2","_this4","_len2","_key2","parameter","options","_this5","parameters","description","markdown","_this6","descriptionHtml","html","_this7","displayName","_this8","historyId","_this9","testCaseId","_this10","attachment","content","_this11","bufferContent","Buffer","from","encoding","toString","contentType","fileExtension","wrapInStep","timestamp","Date","now","attachmentFromPath","path","_this12","logStep","_arguments3","_this13","status","undefined","Status","PASSED","error","start","stop","statusDetails","getMessageAndTraceFromError","step","body","_this14","result","err","details","getStatusFromError","stepDisplayName","_this15","stepParameter","mode","_this16","exports"],"sources":["../../../../src/sdk/runtime/MessageTestRuntime.ts"],"sourcesContent":["import {\n  type AttachmentOptions,\n  type Label,\n  type LabelName,\n  type Link,\n  type LinkType,\n  type ParameterMode,\n  type ParameterOptions,\n  Status,\n} from \"../../model.js\";\nimport type { RuntimeMessage } from \"../types.js\";\nimport { getMessageAndTraceFromError, getStatusFromError } from \"../utils.js\";\nimport type { TestRuntime } from \"./types.js\";\n\nexport abstract class MessageTestRuntime implements TestRuntime {\n  expectedlyFailedTests\n\n  async addFailedTests(tests: string[]) {\n\n  }\n  async label(name: LabelName | string, value: string) {\n    await this.sendMessage({\n      type: \"metadata\",\n      data: {\n        labels: [{ name, value }],\n      },\n    });\n  }\n\n  async labels(...labels: Label[]) {\n    await this.sendMessage({\n      type: \"metadata\",\n      data: {\n        labels,\n      },\n    });\n  }\n\n  async link(url: string, type?: LinkType | string, name?: string) {\n    await this.sendMessage({\n      type: \"metadata\",\n      data: {\n        links: [{ type, url, name }],\n      },\n    });\n  }\n\n  async links(...links: Link[]) {\n    await this.sendMessage({\n      type: \"metadata\",\n      data: {\n        links,\n      },\n    });\n  }\n\n  async parameter(name: string, value: string, options?: ParameterOptions) {\n    await this.sendMessage({\n      type: \"metadata\",\n      data: {\n        parameters: [\n          {\n            name,\n            value,\n            ...options,\n          },\n        ],\n      },\n    });\n  }\n\n  async description(markdown: string) {\n    await this.sendMessage({\n      type: \"metadata\",\n      data: {\n        description: markdown,\n      },\n    });\n  }\n\n  async descriptionHtml(html: string) {\n    await this.sendMessage({\n      type: \"metadata\",\n      data: {\n        descriptionHtml: html,\n      },\n    });\n  }\n\n  async displayName(name: string) {\n    await this.sendMessage({\n      type: \"metadata\",\n      data: {\n        displayName: name,\n      },\n    });\n  }\n\n  async historyId(value: string) {\n    await this.sendMessage({\n      type: \"metadata\",\n      data: {\n        historyId: value,\n      },\n    });\n  }\n\n  async testCaseId(value: string) {\n    await this.sendMessage({\n      type: \"metadata\",\n      data: {\n        testCaseId: value,\n      },\n    });\n  }\n\n  async attachment(name: string, content: Buffer | string, options: AttachmentOptions) {\n    const bufferContent = typeof content === \"string\" ? Buffer.from(content, options.encoding) : content;\n    await this.sendMessage({\n      type: \"attachment_content\",\n      data: {\n        name,\n        content: bufferContent.toString(\"base64\"),\n        encoding: \"base64\",\n        contentType: options.contentType,\n        fileExtension: options.fileExtension,\n        wrapInStep: true,\n        timestamp: Date.now(),\n      },\n    });\n  }\n\n  async attachmentFromPath(name: string, path: string, options: AttachmentOptions) {\n    await this.sendMessage({\n      type: \"attachment_path\",\n      data: {\n        name,\n        path,\n        contentType: options.contentType,\n        fileExtension: options.fileExtension,\n        wrapInStep: true,\n        timestamp: Date.now(),\n      },\n    });\n  }\n\n  async logStep(name: string, status: Status = Status.PASSED, error?: Error) {\n    const timestamp = Date.now();\n    await this.sendMessage({\n      type: \"step_start\",\n      data: {\n        name,\n        start: timestamp,\n      },\n    });\n    await this.sendMessage({\n      type: \"step_stop\",\n      data: {\n        status: status,\n        stop: timestamp,\n        statusDetails: error\n          ? {\n              ...getMessageAndTraceFromError(error),\n            }\n          : undefined,\n      },\n    });\n  }\n\n  async step<T = void>(name: string, body: () => T | PromiseLike<T>) {\n    await this.sendMessage({\n      type: \"step_start\",\n      data: {\n        name,\n        start: Date.now(),\n      },\n    });\n\n    try {\n      const result = await body();\n\n      await this.sendMessage({\n        type: \"step_stop\",\n        data: {\n          status: Status.PASSED,\n          stop: Date.now(),\n        },\n      });\n\n      return result;\n    } catch (err) {\n      const details = getMessageAndTraceFromError(err as Error);\n\n      await this.sendMessage({\n        type: \"step_stop\",\n        data: {\n          status: getStatusFromError(err as Error),\n          stop: Date.now(),\n          statusDetails: {\n            ...details,\n          },\n        },\n      });\n\n      throw err;\n    }\n  }\n\n  async stepDisplayName(name: string) {\n    await this.sendMessage({\n      type: \"step_metadata\",\n      data: { name },\n    });\n  }\n\n  async stepParameter(name: string, value: string, mode?: ParameterMode) {\n    await this.sendMessage({\n      type: \"step_metadata\",\n      data: {\n        parameters: [{ name, value, mode }],\n      },\n    });\n  }\n\n  abstract sendMessage(message: RuntimeMessage): Promise<void>;\n}\n"],"mappings":"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","ignoreList":[]}